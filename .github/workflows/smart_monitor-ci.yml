name: smart monitor with telegram notification
on:
  push:
    branches:
      - main
    paths:
      - 'smart-monitor/**'
      - '.github/workflows/smart_monitor-ci.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'smart-monitor/**'
      - '.github/workflows/smart_monitor-ci.yml'


jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: start docker
        uses: docker/setup-buildx-action@v2

      - name: Create temp .env
        working-directory: ./smart-monitor
        run: |
          mkdir -p ./logs
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" > .env
          echo "TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}" >> .env
          ls -la
          cat .env

      - name: start the container
        working-directory: ./smart-monitor
        run: docker compose up --build -d
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

      - name: wait for the container
        run: sleep 15

      - name: check on containers
        working-directory: ./smart-monitor
        run: docker ps -a


      - name: check logs
        working-directory: ./smart-monitor
        run: docker compose logs aggregator || true

      - name: uploading aggregator logs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: aggregator-logs
          path: ./smart-monitor/logs/

      - name: take down the container
        working-directory: ./smart-monitor
        run: docker compose down

#telegram notification section
      - name: notify via telegram
        if: always()
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          JOB_STATUS: ${{ job.status }}
        run: |
          STATUS="${JOB_STATUS,,}" #taking care of case sensitivity
          if [ "$STATUS" = "success" ]; then
            MESSAGE="CI/CD success for smart monitor at $(date '+%Y-%m-%d %H:%M:%S')"
          else
            MESSAGE="CI/CD failed for smart monitor at $(date '+%Y-%m-%d %H:%M:%S')"
          fi
          curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
            -d "chat_id=${CHAT_ID}" \
            -d "text=$MESSAGE" || true
